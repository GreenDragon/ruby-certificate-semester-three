require "test/unit"
require "apache_log"
require "redgreen"

class TestApacheLog < Test::Unit::TestCase
  def test_singleton_reader
    a, b = ApacheLog::Reader.instance, ApacheLog::Reader.instance
    assert a == b
    assert_raises(NoMethodError) do
      a.new
    end
    assert_raises(TypeError) do
      a.clone
    end
  end

  def test_singleton_writer
    a, b = ApacheLog::Writer.instance, ApacheLog::Writer.instance
    
    assert a.object_id == b.object_id
    assert_raises(NoMethodError) do
      a.new
    end
    assert_raises(TypeError) do
      a.clone
    end
    assert_equal a.file_out, nil
  end

  def test_singleton_writer_sets_file_name
    log = ApacheLog::Writer.instance
    log.file_out = "apache.log.out"

    assert_equal log.file_out, "apache.log.out"
  end

  def test_resolv_ipaddr_to_hostname
    lookup = ApacheLog::Resolver.new
    host1 = lookup.getname('76.121.96.144')
    host2 = lookup.getname('64.22.71.237')

    assert_equal host1, "c-76-121-96-144.hsd1.wa.comcast.net"
    assert_equal host2, "ns1.arashi.com"
  end

  def test_resolve_ipaddr_to_hostname_bad_ipaddr
    lookup = ApacheLog::Resolver.new

    host1 = lookup.getname('127.0.0.66')

    assert_equal host1, "127.0.0.66.unresolvable.tld"
  end

  def test_reading_a_file
    a = ApacheLog::Reader.instance
    store = ApacheLog::DataStore.new
    a.parse("test.log")

    a.ipaddrs
  end
end
